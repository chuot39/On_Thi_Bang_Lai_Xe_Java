// Generated by view binder compiler. Do not edit!
package com.example.OnThiBangLaiXe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.OnThiBangLaiXe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBienBaoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivBienBao;

  @NonNull
  public final TextView txtMaBienBao;

  @NonNull
  public final TextView txtNoiDungBienBao;

  @NonNull
  public final TextView txtTieuDeBienBao;

  private LayoutBienBaoBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivBienBao,
      @NonNull TextView txtMaBienBao, @NonNull TextView txtNoiDungBienBao,
      @NonNull TextView txtTieuDeBienBao) {
    this.rootView = rootView;
    this.ivBienBao = ivBienBao;
    this.txtMaBienBao = txtMaBienBao;
    this.txtNoiDungBienBao = txtNoiDungBienBao;
    this.txtTieuDeBienBao = txtTieuDeBienBao;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBienBaoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBienBaoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bien_bao, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBienBaoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivBienBao;
      ImageView ivBienBao = ViewBindings.findChildViewById(rootView, id);
      if (ivBienBao == null) {
        break missingId;
      }

      id = R.id.txtMaBienBao;
      TextView txtMaBienBao = ViewBindings.findChildViewById(rootView, id);
      if (txtMaBienBao == null) {
        break missingId;
      }

      id = R.id.txtNoiDungBienBao;
      TextView txtNoiDungBienBao = ViewBindings.findChildViewById(rootView, id);
      if (txtNoiDungBienBao == null) {
        break missingId;
      }

      id = R.id.txtTieuDeBienBao;
      TextView txtTieuDeBienBao = ViewBindings.findChildViewById(rootView, id);
      if (txtTieuDeBienBao == null) {
        break missingId;
      }

      return new LayoutBienBaoBinding((LinearLayout) rootView, ivBienBao, txtMaBienBao,
          txtNoiDungBienBao, txtTieuDeBienBao);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
