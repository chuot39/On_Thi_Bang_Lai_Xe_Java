// Generated by view binder compiler. Do not edit!
package com.example.OnThiBangLaiXe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.OnThiBangLaiXe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBienBaoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView imgDetailsBienBao;

  @NonNull
  public final Toolbar toolbarBienBao;

  @NonNull
  public final TextView txtContentDetailBB;

  @NonNull
  public final TextView txtTitleDetailBB;

  @NonNull
  public final TextView txtTitleIDlBB;

  private ActivityDetailsBienBaoBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ImageView imgDetailsBienBao,
      @NonNull Toolbar toolbarBienBao, @NonNull TextView txtContentDetailBB,
      @NonNull TextView txtTitleDetailBB, @NonNull TextView txtTitleIDlBB) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.imgDetailsBienBao = imgDetailsBienBao;
    this.toolbarBienBao = toolbarBienBao;
    this.txtContentDetailBB = txtContentDetailBB;
    this.txtTitleDetailBB = txtTitleDetailBB;
    this.txtTitleIDlBB = txtTitleIDlBB;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBienBaoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBienBaoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details_bien_bao, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBienBaoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.imgDetailsBienBao;
      ImageView imgDetailsBienBao = ViewBindings.findChildViewById(rootView, id);
      if (imgDetailsBienBao == null) {
        break missingId;
      }

      id = R.id.toolbarBienBao;
      Toolbar toolbarBienBao = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBienBao == null) {
        break missingId;
      }

      id = R.id.txtContentDetailBB;
      TextView txtContentDetailBB = ViewBindings.findChildViewById(rootView, id);
      if (txtContentDetailBB == null) {
        break missingId;
      }

      id = R.id.txtTitleDetailBB;
      TextView txtTitleDetailBB = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleDetailBB == null) {
        break missingId;
      }

      id = R.id.txtTitleIDlBB;
      TextView txtTitleIDlBB = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleIDlBB == null) {
        break missingId;
      }

      return new ActivityDetailsBienBaoBinding((LinearLayout) rootView, constraintLayout,
          imgDetailsBienBao, toolbarBienBao, txtContentDetailBB, txtTitleDetailBB, txtTitleIDlBB);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
